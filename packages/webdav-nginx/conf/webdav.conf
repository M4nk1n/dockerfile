dav_ext_lock_zone zone=a:10m;

server {
  # listen 80;
  # server_name webdav.domain.com;
  set $webdav_root "/data/";

  auth_basic "Restricted";
  auth_basic_user_file /etc/nginx/htpasswd;

  access_log /var/log/nginx/webdav_access.log;
  error_log /var/log/nginx/webdav_error.log debug;

  location / {
    root $webdav_root;

    charset utf-8;

    # 貌似开启 fancyindex 需要关闭 autoindex？
    # autoindex on;
    autoindex_exact_size on;
    autoindex_localtime on;

    fancyindex on;
    fancyindex_header /+dav/header.html;
    fancyindex_footer /+dav/footer.html;

    location /+dav/header.html {
      alias /webdav-js/davindex-header.html;
    }

    location /+dav/footer.html {
      alias /webdav-js/davindex-footer.html;
    }

    dav_ext_lock zone=a;

    dav_methods PUT MKCOL;
    dav_ext_methods OPTIONS LOCK UNLOCK;
    create_full_put_path on;
    min_delete_depth 0;
    dav_access user:rw group:rw all:r;

    error_page 599 = @propfind_handler;
    error_page 598 = @delete_handler;
    error_page 597 = @copy_move_handler;
    open_file_cache off;

    # Maximum size of uploaded file, 0 means unlimited
    client_max_body_size  0;

    if ($request_method = OPTIONS) {
      add_header Allow 'OPTIONS, GET, HEAD, POST, PUT, MKCOL, MOVE, COPY, DELETE, PROPFIND, PROPPATCH, LOCK, UNLOCK';
      add_header DAV '1, 2';
      return 200;
    }

    if ($request_method = PROPFIND) {
      return 599;
    }

    # Unsupported, allways return OK.
    if ($request_method = PROPPATCH) {
      add_header Content-Type 'text/xml';
      return 207 '<?xml version="1.0"?><a:multistatus xmlns:a="DAV:"><a:response><a:propstat><a:status>HTTP/1.1 200 OK</a:status></a:propstat></a:response></a:multistatus>';
    }

    # Microsoft specific handle: add trailing slash.
    if ($request_method = MKCOL) {
      rewrite ^(.*[^/])$ $1/ break;
    }

    if ($request_method = DELETE) {
      return 598;
    }

    if ($request_method = COPY) {
      return 597;
    }

    if ($request_method = MOVE) {
      return 597;
    }
  }

  location @propfind_handler {
    internal;

    open_file_cache off;

    # Microsoft specific handle.
    if (!-e $webdav_root/$uri) {
      return 404;
    }
    root $webdav_root;
    dav_ext_methods PROPFIND;
  }

  location @delete_handler {
    internal;

    open_file_cache off;

    # Microsoft specific handle: Add trailing slash to dirs.
    if (-d $webdav_root/$uri) {
      rewrite ^(.*[^/])$ $1/ break;
    }
    root $webdav_root;
    dav_methods DELETE;
  }

  location @copy_move_handler {
    internal;

    open_file_cache off;

    # Microsoft specific handle: Add trailing slash to dirs.
    if (-d $webdav_root/$uri) {
      more_set_input_headers 'Destination: $http_destination/';
      rewrite ^(.*[^/])$ $1/ break;
    }
    root $webdav_root;
    dav_methods COPY MOVE;
  }
}